# aditional packages for scripting

from os.path import isdir, join
from os      import listdir, makedirs, system, remove, rmdir


def writeFile(name,content):
    file=open(name,"w")
    try: remove(name)
    except: pass
    file.write(content)
    file.close()


def writeFilepath(container,name,content):
    try:    makedirs(container)
    except: pass
    fullname=str(join(container,name))
    file=open(fullname,"w")
    try:remove(fullname)
    except:pass
    file.write(content)
    file.close()


def readFilepath(container,name):
    fullname=str(join(container,name))
    file=open(fullname,"r")
    content=file.read()
    file.close()
    return content


def getSkins():
    all_name_skins=[]
    all_name_files=listdir("../skins")
    for name in all_name_files:
        if isdir(join("../skins",name)):
            all_name_skins.append(name)
    return all_name_skins


def isSkin(name): return name in getSkins()


def delete_all_contents(path):
    for element in listdir(path):
        full_path=join(path,element)
        if isdir(full_path): rmdir(full_path) 
        else: remove(full_path)

#--------------------------------------------------------

def light_scss(nameStyle):
    return f"""//  This file is autogenerated, do not modify manually
@import "../../bulma/sass/utilities/_all.sass";
@import "1.{nameStyle}.light.custom.scss";  
@import "../../bulma/bulma.sass";"""  

#--------------------------------------------------------

def dark_scss(nameStyle):
    return f"""//  This file is autogenerated, do not modify manually
@import "../../bulma/sass/utilities/_all.sass";
@import "1.{nameStyle}.light.custom.scss";  
@import "2.{nameStyle}.dark.custom.scss";  
@import "../../bulma/bulma.sass";"""

#--------------------------------------------------------

def light_custom_scss(nameStyle):
    return f"""//
// custom {nameStyle} light style here
//
//---------------------------------------

$bulmaskin_var: darkred; // <-- custom color
$colors: mergeColorMaps(
    (    
    "primary": (
            $bulmaskin_var,
            $white,
        ),
    ),
    $custom-colors
);
$link: $bulmaskin_var;
$body-background-color: white;

            """

#--------------------------------------------------------

def dark_custom_scss(nameStyle):
    return f"""//
// custom {nameStyle} dark style here
//
//---------------------------------------

$body-background-color: #d0d0d0;

            """
#--------------------------------------------------------
   
def test_light_html(nameStyle):
    return f"""<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Test {nameStyle} light</title>
    <link rel="stylesheet" href="../../css/{nameStyle}.light.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.3.0/font/bootstrap-icons.css">
</head>
<body>
  <section class="hero is-primary"> <div class="hero-body">
    <p class="title">test {nameStyle} light</p>
    <a href="test.{nameStyle}.dark.html">view dark</a>
  </div></section>
  <div id="put_reel_html_here"></div>
  <script src="../../js/html/get_html_reel.js"></script>
</body>
</html> """

#--------------------------------------------------------
 
def test_dark_html(nameStyle):
    return f"""<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Test {nameStyle} dark </title>
    <link rel="stylesheet" href="../../css/{nameStyle}.dark.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.3.0/font/bootstrap-icons.css">
</head>
<body>
  <section class="hero is-primary"> <div class="hero-body">
    <p class="title">test {nameStyle} dark</p>
    <a href="test.{nameStyle}.light.html">view light</a>
  </div></section>
  <div id="put_reel_html_here"></div>
  <script src="../../js/html/get_html_reel.js"></script>
</body>
</html> """ 
#--------------------------------------------------------
 
def readme(nameStyle):
    return f"""# {nameStyle}            
a Theme for Bulma part of BulmaSkins             
[![ Preview {nameStyle} ](https://img.shields.io/badge/-Preview_{nameStyle}-red)](https://saul11235.github.io/BulmaSkins/view?skin={nameStyle})
[![ light mode ](https://img.shields.io/badge/-light_mode-black)](https://saul11235.github.io/BulmaSkins/view?skin={nameStyle}&dark=false)
[![ dark mode ](https://img.shields.io/badge/-dark_mode-black)](https://saul11235.github.io/BulmaSkins/view?skin={nameStyle}&dark=true)
## adding in your project
if you what to use this theme in your project put this in your html doc:
### {nameStyle}-light via CDN
```html
<link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/Saul11235/BulmaSkins@latest/css/{nameStyle}.light.css">
```
### {nameStyle}-dark via CDN
```html
<link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/Saul11235/BulmaSkins@latest/css/{nameStyle}.dark.css">
```
### {nameStyle} whith switch-color via CDN
in head element:
```html
<!-- begin BulmaSkins - {nameStyle} -->
<link id="BulmaSkins-light" rel="stylesheet" href="https://cdn.jsdelivr.net/gh/Saul11235/BulmaSkins@latest/css/{nameStyle}.light.css">
<link id="BulmaSkins-dark"  rel="stylesheet" href="https://cdn.jsdelivr.net/gh/Saul11235/BulmaSkins@latest/css/{nameStyle}.dark.css">
<script src="https://cdn.jsdelivr.net/gh/Saul11235/BulmaSkins@latest/js/cdn/first.js"></script>
```
creating a button to manage the switch themes, in body:            
```html
<!-- BulmaSkins-switch -->
<button id="BulmaSkins-switch" class="button is-primary">
 <div id="BulmaSkins-switch-light">
   Light
 </div>
 <div id="BulmaSkins-switch-dark" style="display:none">
   Dark
 </div>
</button>
```
in end of body element:            
```html
<!-- end BulmaSkins -->
<script src="https://cdn.jsdelivr.net/gh/Saul11235/BulmaSkins@latest/js/cdn/last.js"></script>
```
[![Bulma skins](https://img.shields.io/badge/-Bulma_skins-blue)](https://saul11235.github.io/BulmaSkins/)
[![By Edwin Saul](https://img.shields.io/badge/-By_Edwin_Saul-black)](https://edwinsaul.com)
"""
#--------------------------------------------------------
 
def python_script(nameStyle):
    return f"""from os import system as s #this file is autogenerated
s("sass {nameStyle}.light.scss ../../css/{nameStyle}.light.css --style compressed")
s("sass {nameStyle}.dark.scss  ../../css/{nameStyle}.dark.css --style compressed")"""

